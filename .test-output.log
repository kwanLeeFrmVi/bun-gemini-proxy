[0;34m╔════════════════════════════════════════════════╗[0m
[0;34m║  Gemini Proxy - OpenAI Endpoints Test Suite  ║[0m
[0;34m╚════════════════════════════════════════════════╝[0m

[0;34m📋 Test Configuration:[0m
   Mode: [1;33mmock[0m
   Port: [1;33m8000[0m
   URL:  [1;33mhttp://localhost:8000[0m

[0;34m═══════════════════════════════════════════════[0m
[0;34m  Phase 1: Mock Mode Testing[0m
[0;34m═══════════════════════════════════════════════[0m

[1;33m📝 Backing up config...[0m
[1;33m⚙️  Configuring mock mode...[0m
[0;32m✓ Mock mode configured[0m

[1;33m🚀 Starting server in mock mode...[0m
[0;32m✓ Server started (PID: 32138)[0m
[1;33m⏳ Waiting for server to start...[0m
[0;32m✓ Server is ready![0m

[1;33m🧪 Running mock mode tests...[0m

bun test v1.2.22 (6bafe260)
{"level":30,"time":1759200571717,"host":"0.0.0.0","port":8000,"msg":"Gemini proxy server initialized (listener disabled)"}

tests/contract/openai-endpoints.test.ts:
154 |         }),
155 |       }),
156 |     );
157 | 
158 |     expect(response.status).toBe(200);
159 |     expect(response.headers.get("content-type")).toContain("text/event-stream");
                                                       ^
error: expect(received).toContain(expected)

Expected to contain: "text/event-stream"
Received: "application/json"

      at <anonymous> (/Users/quanle96/Documents/bun-gemini-proxy/tests/contract/openai-endpoints.test.ts:159:50)
(fail) OpenAI Endpoints: /v1/chat/completions > returns OpenAI-compatible chat completion (streaming) [26.87ms]

 18 pass
 1 fail
 107 expect() calls
Ran 19 tests across 1 file. [369.00ms]

[0;31m❌ Mock mode tests FAILED[0m
[1;33m📄 Server logs:[0m
$ bun run index.ts
{"level":50,"time":1759200571715,"error":{"code":"SQLITE_BUSY","errno":5,"byteOffset":-1},"msg":"Primary persistence upsert failed; delegating to fallback"}
113 | 
114 |   let server: Server | null = null;
115 |   let handleSignal: ((signal: string) => void) | null = null;
116 | 
117 |   if (overrides.listen !== false) {
118 |     server = Bun.serve({
                       ^
error: Failed to start server. Is port 8000 in use?
 syscall: "listen",
   errno: 0,
    code: "EADDRINUSE"

      at startProxyServer (/Users/quanle96/Documents/bun-gemini-proxy/src/server/server.ts:118:18)
      at /Users/quanle96/Documents/bun-gemini-proxy/index.ts:3:1
      at loadAndEvaluateModule (2:1)

Bun v1.2.22 (macOS arm64)
error: script "start" exited with code 1

[1;33m🛑 Stopping server (PID: 32138)...[0m
[0;32m✓ Server stopped[0m
